name: Docker Build Service API Gateway

on:
  push:
    branches:
      - main
    paths:
      - 'functions/0002_api_gateway/main.py'
      - 'functions/0002_api_gateway/db_util.py'
      - 'functions/0002_api_gateway/docs_processing.py'
      - 'functions/0002_api_gateway/requirements.txt'
      - 'functions/0002_api_gateway/Dockerfile'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-api-gateway

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build-and-push
        with:
          context: functions/0002_api_gateway
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=registry
            name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          annotations: |
            org.opencontainers.image.description="Multi-Arch API Gateway Service for LLM Infrastructure"
      
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}